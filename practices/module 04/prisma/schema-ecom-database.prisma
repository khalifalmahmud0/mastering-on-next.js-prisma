// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// *****
// Database For ECOMMERCE (ecom)
// *****

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Policies 
enum policie_type {
  TypeOne
  TypeTwo
  TypeThree
}

model policies {
  id         BigInt       @id @default(autoincrement())
  // Default Rows
  type       policie_type
  des        String       @db.LongText
  // Establish Relation Reference With
  // Create Relation With
  created_at DateTime     @default(now()) @db.DateTime(0)
  updated_at DateTime     @default(now()) @updatedAt @db.DateTime(0)
}

// sslcommerz Accounts 
model sslcommerz_accounts {
  id             BigInt   @id @default(autoincrement())
  // Default Rows
  store_id       String
  store_password String
  currency       String
  success_url    String
  fail_url       String
  cancel_url     String
  ipn_url        String
  init_url       String
  // Establish Relation Reference With
  // Create Relation With
  created_at     DateTime @default(now()) @db.DateTime(0)
  updated_at     DateTime @default(now()) @updatedAt @db.DateTime(0)
}

// Users 
model users {
  id         BigInt   @id @default(autoincrement())
  // Default Rows
  email      String   @unique
  otp        String
  // Establish Relation Reference With
  // Create Relation With
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @updatedAt @db.DateTime(0)
}

// invoices
enum delivery_status {
  pending
  completed
  canceled
}

model invoices {
  id              BigInt          @id @default(autoincrement())
  // Default Rows
  total           String
  vat             String
  payable         String
  cus_details     String
  ship_details    String
  tran_id         String
  val_id          String
  delivery_status delivery_status
  payment_status  String
  // Establish Relation Reference With
  // Create Relation With
  user_id         BigInt
  created_at      DateTime        @default(now()) @db.DateTime(0)
  updated_at      DateTime        @default(now()) @updatedAt @db.DateTime(0)
}

// Invoice Products 
model invoice_products {
  id         BigInt   @id @default(autoincrement())
  // Default Rows
  qty        String
  sale_price String
  // Establish Relation Reference With
  // Create Relation With
  invoice_id BigInt
  product_id BigInt
  user_id    BigInt
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @updatedAt @db.DateTime(0)
}

// Product Reviews 
model product_reviews {
  id          BigInt   @id @default(autoincrement())
  // Default Rows
  description String
  rating      String
  // Establish Relation Reference With
  // Create Relation With
  customer_id BigInt
  product_id  BigInt
  created_at  DateTime @default(now()) @db.DateTime(0)
  updated_at  DateTime @default(now()) @updatedAt @db.DateTime(0)
}

// Product Wishes 
model product_wishes {
  id         BigInt   @id @default(autoincrement())
  // Default Rows
  // Establish Relation Reference With
  // Create Relation With
  product_id BigInt
  user_id    BigInt
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @updatedAt @db.DateTime(0)
}

// Product Carts 
model product_carts {
  id         BigInt   @id @default(autoincrement())
  // Default Rows
  color      String
  size       String
  qty        String
  price      String
  // Establish Relation Reference With
  // Create Relation With
  user_id    BigInt
  product_id BigInt
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @updatedAt @db.DateTime(0)
}

// Products 
enum remark_type {
  TypeOne
  TypeTwo
  TypeThree
}

model products {
  id             BigInt      @id @default(autoincrement())
  // Default Rows
  title          String
  short_des      String
  price          String
  discount       Int         @db.TinyInt
  discount_price String
  image          String
  stock          Int         @db.TinyInt
  star           Float       @db.Double
  remark         remark_type
  // Establish Relation Reference With
  // Create Relation With
  category_id    BigInt
  brand_id       BigInt
  created_at     DateTime    @default(now()) @db.DateTime(0)
  updated_at     DateTime    @default(now()) @updatedAt @db.DateTime(0)
}

// Product Details 
model product_details {
  id         BigInt   @id @default(autoincrement())
  // Default Rows
  img1       String
  img2       String
  img3       String
  img4       String
  des        String   @db.LongText
  color      String
  size       String
  // Establish Relation Reference With
  // Create Relation With
  product_id BigInt   @unique
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @updatedAt @db.DateTime(0)
}

// Product Sliders 
model product_sliders {
  id         BigInt   @id @default(autoincrement())
  // Default Rows
  title      String
  short_des  String
  price      String
  image      String
  // Establish Relation Reference With
  // Create Relation With
  product_id BigInt   @unique
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @updatedAt @db.DateTime(0)
}

// Categories 
model categories {
  id            BigInt   @id @default(autoincrement())
  // Default Rows
  categoryName  String
  categoryImage String
  // Establish Relation Reference With
  // Create Relation With
  created_at    DateTime @default(now()) @db.DateTime(0)
  updated_at    DateTime @default(now()) @updatedAt @db.DateTime(0)
}

model brands {
  id         BigInt   @id @default(autoincrement())
  // Default Rows
  brandName  String
  brandImage String
  // Establish Relation Reference With
  // Create Relation With
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @updatedAt @db.DateTime(0)
}

// Customer Profiles 
model customer_profiles {
  id            BigInt   @id @default(autoincrement())
  // Default Rows
  cus_name      String
  cus_add       String
  cus_city      String
  cus_state     String
  cus_postcode  String
  cus_country   String
  cus_phone     String
  cus_fax       String
  ship_name     String
  ship_add      String
  ship_city     String
  ship_state    String
  ship_postcode String
  ship_country  String
  ship_phone    String
  // Establish Relation Reference With
  // Create Relation With
  user_id       BigInt   @unique
  created_at    DateTime @default(now()) @db.DateTime(0)
  updated_at    DateTime @default(now()) @updatedAt @db.DateTime(0)
}
